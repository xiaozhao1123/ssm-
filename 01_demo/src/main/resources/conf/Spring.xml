<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--扫描com.zhao下的所有包，除了controller-->
    <context:component-scan base-package="com.zhao">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--声明数据库文件的位置-->
    <context:property-placeholder location="classpath:conf/jdbc.properties"/>
    <!--创建连接池-->
    <bean id="mydata" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="123456"/>
    </bean>

    <!--创建SqlSessionFact对象-->
    <bean id="sql" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="mydata"/>
        <!--指定mybatis文件的位置-->
        <property name="configLocation" value="classpath:conf/Mybatis.xml"/>
        <!--指定mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--创建dao对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sql"/>
        <property name="basePackage" value="com.zhao.dao"/>
    </bean>
    <!--声明Service的注解@Service所在的包名-->
    <context:component-scan base-package="com.zhao.service"/>

    <!--  对数据库进行批量处理,一个可以批量处理的sqlsession  -->
    <bean id="sqlSession "  class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sql"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
    <!--事物的处理-->
    <bean id="data" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mydata"></property>
    </bean>
    <aop:config>
        <aop:pointcut id="txpoint" expression="execution(* com.zhao.service..*(..))"/>
        <aop:advisor advice-ref="txadvice" pointcut-ref="txpoint"/>
    </aop:config>
    <tx:advice id="txadvice" transaction-manager="data">
        <tx:attributes>
            <tx:method name="*"/>
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>




</beans>